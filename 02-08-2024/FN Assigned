
internal class Q08
{
    private static void PrintNumTriangleMirroredRightAngle(int N) // = 5
    {
        int I = 1;
        while (I <= N)
        {
            int J = 1;
            while (J <= N)
            {
                Console.WriteLine(" ");
                J++;
            }
            int K = 1;
            while (K <= N)
            {
                Console.WriteLine($"{J} ");
                J++;
            }
            Console.WriteLine();
            I++;
        }
    }
    private static void TestPrintNumTriangleMirroredRightAngle()
    {
        Console.Write("Enter number of lines :");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngle(N);
    }
    private static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestPrintNumTriangleMirroredRightAngle-----");
        TestPrintNumTriangleMirroredRightAngle();
        Console.WriteLine("-----End TestPrintNumTriangleMirroredRightAngle-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}



internal class Q09
{
    private static void PrintNumTriangleMirroredRightAngle(int N) // = 5
    {
        int I = 1;
        do
        {
            int J = 1;
            do
            {
                Console.WriteLine(" ");
                J++;
            } while (J <= N);
             int K = 1;
            do
            {
                Console.WriteLine($"{J} ");
                J++;
            } while (K <= N) ;

             Console.WriteLine();
            I++;
        } while (I <= N);
    }
    private static void TestPrintNumTriangleMirroredRightAngle()
    {
        Console.Write("Enter number of lines :");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngle(N);
    }
    private static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestPrintNumTriangleMirroredRightAngle-----");
        TestPrintNumTriangleMirroredRightAngle();
        Console.WriteLine("-----End TestPrintNumTriangleMirroredRightAngle-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }

}

//P4. print series 0, 1, 1, 2, 3, 5, 8, 13, ... N terms 

class Q10
{
    static void PrintSeries0_1_1_2(int numOfTerms)
    {
        int firstTerm = 0;
        int secondTerm = 1;
        Console.Write($"{firstTerm} {secondTerm} ");
        for (int I = 1; I <= numOfTerms-2 ; I++)
        {
                int nextTerm = firstTerm + secondTerm;
                Console.Write($"{nextTerm} ");
                firstTerm = secondTerm;
                secondTerm = nextTerm; 
        }
    }
    // input=5, output=0 1 1 2 3 
    // input=6, output=0 1 1 2 3 5 
    // input=3, output=0 1 1 
    static void TestPrintSeries0_1_1_2()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries0_1_1_2(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries0_1_1_2();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}

class Q11
{
    static void PrintSeries0_1_1_2(int numOfTerms)
    {
        int firstTerm = 0;
        int secondTerm = 1;
        Console.Write($"{firstTerm} {secondTerm} ");
        int I = 1; 
        while (I <= numOfTerms-2 )
        {
                int nextTerm = firstTerm + secondTerm;
                Console.Write($"{nextTerm} ");
                firstTerm = secondTerm;
                secondTerm = nextTerm; 
                I++;
        }
    }
    // input=5, output=0 1 1 2 3 
    // input=6, output=0 1 1 2 3 5 
    // input=3, output=0 1 1 
    static void TestPrintSeries0_1_1_2()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries0_1_1_2(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries0_1_1_2();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}


class Q12
{
    static void PrintSeries0_1_1_2(int numOfTerms)
    {
        int firstTerm = 0;
        int secondTerm = 1;
        Console.Write($"{firstTerm} {secondTerm} ");
        int I = 1; 
        do
        {
                int nextTerm = firstTerm + secondTerm;
                Console.Write($"{nextTerm} ");
                firstTerm = secondTerm;
                secondTerm = nextTerm; 
                I++;
        }while (I <= numOfTerms-2 );
    }
    // input=5, output=0 1 1 2 3 
    // input=6, output=0 1 1 2 3 5 
    // input=3, output=0 1 1 
    static void TestPrintSeries0_1_1_2()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries0_1_1_2(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries0_1_1_2();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}

class Q13
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int firstTerm = 0;
        int secondTerm = 1;
        int nextTerm=0;
         
        for(int I = 1;I <= numOfTerms-2 ; I++)
        {
                nextTerm = firstTerm + secondTerm;
                firstTerm = secondTerm;
                secondTerm = nextTerm; 
               
        }
        Console.Write($"{nextTerm} ");
    }
    // input=5, output=10 12 14 16 18
    // input=8, output=10 12 14 16 18 20 22 24
    // input=3, output=10 12 14
    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries10_12_14();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}

class Q14
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int firstTerm = 0;
        int secondTerm = 1;
        int nextTerm=0;
        int I = 1; 
        while (I <= numOfTerms-2 )
        {
                nextTerm = firstTerm + secondTerm;
                firstTerm = secondTerm;
                secondTerm = nextTerm; 
                I++;
        }
        Console.Write($"{nextTerm} ");
    }
    // input=5, output=10 12 14 16 18
    // input=8, output=10 12 14 16 18 20 22 24
    // input=3, output=10 12 14
    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries10_12_14();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}


class Q15
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int firstTerm = 0;
        int secondTerm = 1;
        int nextTerm=0;
        int I = 1; 
         do
        {
                nextTerm = firstTerm + secondTerm;
                firstTerm = secondTerm;
                secondTerm = nextTerm; 
                I++;
        }while (I <= numOfTerms-2 );
        Console.Write($"{nextTerm} ");
    }
    // input=5, output=10 12 14 16 18
    // input=8, output=10 12 14 16 18 20 22 24
    // input=3, output=10 12 14
    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries10_12_14();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}

using System;
class Q16
{
    //[Ashna, Neha, Nivya, Kuriakose[doubt], Rishwin[discussion], Giris]
    
    static void PrintNumTriangleMirroredRightAngle(int N)
    { 
        for(int I = N; I >= 1; I-- )
        { 
            for(int J = I; J >=1; J--)
            {
                Console.Write("  "); //2 spaces
            }
            for(int J = N; J >=I; J--)
            {
                Console.Write($"{J} ");//num and space
            }
            Console.WriteLine();//new line 
            
        }
    }
    //input=4,output=4 lines triangle 
    //input=5,output=5 lines triangle 
    //input=7,output=7 lines triangle 
    static void TestPrintNumTriangleMirroredRightAngle()
    {
        Console.Write("Enter number of lines:");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngle(N);
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestPrintNumTriangleMirroredRightAngle-----");
        TestPrintNumTriangleMirroredRightAngle();
        Console.WriteLine("-----End TestPrintNumTriangleMirroredRightAngle-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}

class Q17
{
    //[Ashna, Neha, Nivya, Kuriakose[doubt], Rishwin[discussion], Giris]
    
    static void PrintNumTriangleMirroredRightAngle(int N)
    { 
        int I = N;
        while( I >= 1)
        { 
            int J = I;
            while( J >=1)
            {
                Console.Write("  "); //2 spaces
                 J--;
            }
            int K = N;
            while( K >=I)
            {
                Console.Write($"{K} ");//num and space
                K--;
            }
            Console.WriteLine();//new line 
             I-- ;
        }
    }
    //input=4,output=4 lines triangle 
    //input=5,output=5 lines triangle 
    //input=7,output=7 lines triangle 
    static void TestPrintNumTriangleMirroredRightAngle()
    {
        Console.Write("Enter number of lines:");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngle(N);
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestPrintNumTriangleMirroredRightAngle-----");
        TestPrintNumTriangleMirroredRightAngle();
        Console.WriteLine("-----End TestPrintNumTriangleMirroredRightAngle-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}

class Q18
{
    //[Ashna, Neha, Nivya, Kuriakose[doubt], Rishwin[discussion], Giris]
    
    static void PrintNumTriangleMirroredRightAngle(int N)
    { 
        int I = N;
        do
        { 
            int J = I;
            do
            {
                Console.Write("  "); //2 spaces
                 J--;
            }while( J >=1);
            int K = N;
            do
            {
                Console.Write($"{K} ");//num and space
                K--;
            }while(K >=I);
            Console.WriteLine();//new line 
             I-- ;
        }while( I >= 1);
    }
    //input=4,output=4 lines triangle 
    //input=5,output=5 lines triangle 
    //input=7,output=7 lines triangle 
    static void TestPrintNumTriangleMirroredRightAngle()
    {
        Console.Write("Enter number of lines:");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngle(N);
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestPrintNumTriangleMirroredRightAngle-----");
        TestPrintNumTriangleMirroredRightAngle();
        Console.WriteLine("-----End TestPrintNumTriangleMirroredRightAngle-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}
